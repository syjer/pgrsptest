buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'ru.yandex.qatools.embed:postgresql-embedded:2.10'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.syjer.pgrsptest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-web')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}


import ru.yandex.qatools.embed.postgresql.EmbeddedPostgres
import ru.yandex.qatools.embed.postgresql.distribution.Version.Main

import java.nio.file.Files
import java.nio.file.Paths

task startEmbeddedPgSQL {
	doLast {
		final pgsqlPath = Paths.get(".", "pgrsptest-itest")
		Files.createDirectories(pgsqlPath)
		final tmpDataDir = Files.createTempDirectory(pgsqlPath, "pgrsptest-data")
		final postgres = new EmbeddedPostgres(Main.PRODUCTION, tmpDataDir.normalize().toAbsolutePath().toString())
		postgres.start(EmbeddedPostgres.cachedRuntimeConfig(Paths.get(System.getProperty("java.io.tmpdir"), "pgembed")),
				"localhost", 5432, "pgrsptest", "postgres", "password", Arrays.asList("-E", "SQL_ASCII", "--locale=C", "--lc-collate=C", "--lc-ctype=C"))

		postgres.getProcess().ifPresent({
			final pid = it.getProcessId()
			Files.write(Paths.get(".", "pgrsptest-itest", "pgsql-pid"), Arrays.asList(Long.toString(pid)))
			System.out.println("Launched pgsql with pid " + pid)
		})
	}
}

task stopEmbeddedPgSQL {
	doLast {
		final pidFile = Paths.get(".", "pgrsptest-itest", "pgsql-pid");
		final pid = Files.readAllLines(pidFile).get(0)
		Files.deleteIfExists(pidFile)
		Runtime.runtime.exec("kill -9 " + pid)
		System.out.println("Killed pgsql with pid " + pid)
	}
}